            Randomizer.Seed = new Random(8675309);

            var fakeCategories = new Faker<Categories>()
                .RuleFor(c => c.Name, f => f.Commerce.Categories(1)[0])
                .RuleFor(c => c.Descripton, f => f.Lorem.Paragraph(1))
                .RuleFor(c => c.Image, f => f.Image.PicsumUrl())
                .RuleFor(c => c.IsDeleted, f => f.Random.Bool(0.2f));
            var fakeUsers = new Faker<Users>()
                .RuleFor(u => u.FirstName, f => f.Name.FirstName())
                .RuleFor(u => u.Lastname, f => f.Name.LastName())
                .RuleFor(u => u.CivilianId, f => f.Random.Replace("#########"))
                .RuleFor(u => u.Email, f => f.Internet.Email())
                .RuleFor(u => u.Password, f => f.Internet.Password())
                .RuleFor(u => u.PhoneNumber, f => f.Phone.PhoneNumber())
                .RuleFor(u => u.DateOfBirth, f => f.Date.Past(18))
                .RuleFor(u => u.Role, f => f.Random.Int(1,3))
                .RuleFor(u => u.IsDeleted, f => f.Random.Bool(0.2f));

            var fakeProducts = new Faker<Products>()
                .RuleFor(p => p.Name, f => f.Commerce.ProductName())
                .RuleFor(p => p.Description, f => f.Lorem.Paragraph(1))
                .RuleFor(p => p.Thumbnail, f => f.Image.PicsumUrl())
                .RuleFor(p => p.UnitPrice, f => f.Random.Float(1, 1000f))
                .RuleFor(p => p.CreateByID, f => f.Random.Int(1, 10))
                .RuleFor(p => p.CreatAt, f => f.Date.Past(1))
                .RuleFor(p => p.CategoryID, f => f.Random.Int(1, 10))
                .RuleFor(p => p.IsDeleted, f => f.Random.Bool(0.2f));
            var fakeProductImages = new Faker<ProductImages>()
                .RuleFor(pi => pi.Order, f => f.Random.Int(1, 10))
                .RuleFor(pi => pi.Path, f => f.Image.PicsumUrl())
                .RuleFor(pi => pi.ProductID, f => f.Random.Int(1, 50));
            for(int i = 0; i <= 10; i++)
            {
                Categories category = fakeCategories.Generate();
                migrationBuilder.InsertData(
                    table: "Categories",
                    columns: new[] { "Name", "Descripton", "Image", "IsDeleted" },
                    values: new object[] { category.Name, category.Descripton, category.Image, category.IsDeleted }
                );
            }
            for (int i = 0; i <= 10; i++)
            {
                Users user = fakeUsers.Generate();
                migrationBuilder.InsertData(
                    table: "Users",
                    columns: new[] { "FirstName", "Lastname", "CivilianId", "Email", "Password", "PhoneNumber", "DateOfBirth", "Role", "IsDeleted" },   
                    values: new object[] { user.FirstName, user.Lastname, user.CivilianId, user.Email, user.Password, user.PhoneNumber, user.DateOfBirth, user.Role, user.IsDeleted }
                );
            }
            for (int i = 0; i <= 50; i++)
            {
                Products products = fakeProducts.Generate();
                migrationBuilder.InsertData(
                    table: "Products",
                    columns: new[] { "Name", "Description", "Thumbnail", "UnitPrice", "CreateByID", "CreatAt", "CategoryID", "IsDeleted" },
                    values: new object[] { products.Name, products.Description, products.Thumbnail, products.UnitPrice, products.CreateByID, products.CreatAt, products.CategoryID, products.IsDeleted }
                );
            }
            for (int i = 0; i <= 50; i++)
            {
                ProductImages productImages = fakeProductImages.Generate();
                migrationBuilder.InsertData(
                    table: "ProductImages",
                    columns: new[] { "Order", "Path", "ProductID" },
                    values: new object[] { productImages.Order, productImages.Path, productImages.ProductID }
                );
            }